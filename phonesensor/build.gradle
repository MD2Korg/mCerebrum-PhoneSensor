version = '1.0.6'


buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: 'versioning.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def store_file = hasProperty('MD2K_RELEASE_STORE_FILE') ? MD2K_RELEASE_STORE_FILE : System.getenv('MD2K_RELEASE_STORE_FILE')
def store_password= hasProperty('MD2K_RELEASE_STORE_PASSWORD') ? MD2K_RELEASE_STORE_PASSWORD : System.getenv('MD2K_RELEASE_STORE_PASSWORD')
def key_alias = hasProperty('MD2K_RELEASE_KEY_ALIAS') ? MD2K_RELEASE_KEY_ALIAS : System.getenv('MD2K_RELEASE_KEY_ALIAS')
def key_password = hasProperty('MD2K_RELEASE_KEY_PASSWORD') ? MD2K_RELEASE_KEY_PASSWORD : System.getenv('MD2K_RELEASE_KEY_PASSWORD')


ext {
    travisBuild = System.getenv("TRAVIS") == "true"
    // allows for -Dpre-dex=false to be set
    preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))
}

android {
    signingConfigs {
        release {

            storeFile file(store_file)
            storePassword store_password
            keyAlias key_alias
            keyPassword key_password
        }
    }
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        applicationId "org.md2k.phonesensor"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode buildVersionCode()
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace("-release", "${variant.versionName}"))
                }
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':datakitapi')
    compile project(':utilities')
    compile 'com.google.android.gms:play-services:7.8.0'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.1@aar') {
        transitive = true;
    }

    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'

    // Unit testing dependencies
    androidTestCompile 'junit:junit:4.12'
    // Set this dependency if you want to use the Hamcrest matcher library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // more stuff, e.g., Mockito

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'

}
